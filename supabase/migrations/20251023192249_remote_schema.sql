


SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."meal_types" (
    "id" bigint NOT NULL,
    "meal_type" character varying NOT NULL
);


ALTER TABLE "public"."meal_types" OWNER TO "postgres";


COMMENT ON TABLE "public"."meal_types" IS 'Meal types for each recipe';



ALTER TABLE "public"."meal_types" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."meal_types_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."recipes" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "pre-time-min" numeric,
    "cook-time-min" numeric,
    "instructions" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "cal_per_serv" numeric,
    "user_id" bigint,
    "cuisine" character varying DEFAULT 'Not specified'::character varying,
    "ingredients" "text" DEFAULT 'Not specified'::"text",
    "servings" "text" DEFAULT 'Not specified'::"text",
    "diet_restric" "text" DEFAULT 'Not specified'::"text",
    "user_uuid" "uuid"
);

ALTER TABLE ONLY "public"."recipes" FORCE ROW LEVEL SECURITY;


ALTER TABLE "public"."recipes" OWNER TO "postgres";


COMMENT ON TABLE "public"."recipes" IS 'a collection of instructions with references to the ingredients table';



ALTER TABLE "public"."recipes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."recipes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."recipes_meal_types" (
    "recipe_id" bigint,
    "meal_type_id" bigint,
    "id" bigint NOT NULL
);


ALTER TABLE "public"."recipes_meal_types" OWNER TO "postgres";


COMMENT ON TABLE "public"."recipes_meal_types" IS 'Linking Table';



ALTER TABLE "public"."recipes_meal_types" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."recipes_meal_types_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."users" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "username" character varying NOT NULL,
    "name" character varying NOT NULL,
    "last_name" character varying NOT NULL,
    "password" character varying NOT NULL,
    "email" character varying
);


ALTER TABLE "public"."users" OWNER TO "postgres";


ALTER TABLE "public"."users" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."users_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."meal_types"
    ADD CONSTRAINT "meal_types_meal_type_key" UNIQUE ("meal_type");



ALTER TABLE ONLY "public"."meal_types"
    ADD CONSTRAINT "meal_types_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."recipes_meal_types"
    ADD CONSTRAINT "recipes_meal_types_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."recipes"
    ADD CONSTRAINT "recipes_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_username_key" UNIQUE ("username");



ALTER TABLE ONLY "public"."recipes_meal_types"
    ADD CONSTRAINT "recipes_meal_types_meal_type_id_fkey" FOREIGN KEY ("meal_type_id") REFERENCES "public"."meal_types"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."recipes_meal_types"
    ADD CONSTRAINT "recipes_meal_types_recipe_id_fkey" FOREIGN KEY ("recipe_id") REFERENCES "public"."recipes"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."recipes"
    ADD CONSTRAINT "recipes_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."users"("id") ON DELETE CASCADE;



CREATE POLICY "Any can update recipes" ON "public"."recipes" FOR UPDATE USING (true) WITH CHECK (true);



CREATE POLICY "Enable delete for users based on user_uuid" ON "public"."recipes" FOR DELETE USING (("auth"."uid"() = "user_uuid"));



CREATE POLICY "Enable insert for authenticated users only" ON "public"."recipes" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable read access for all users" ON "public"."recipes" FOR SELECT USING (true);



ALTER TABLE "public"."meal_types" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."recipes" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."recipes_meal_types" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."users" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";








































































































































































GRANT ALL ON TABLE "public"."meal_types" TO "anon";
GRANT ALL ON TABLE "public"."meal_types" TO "authenticated";
GRANT ALL ON TABLE "public"."meal_types" TO "service_role";



GRANT ALL ON SEQUENCE "public"."meal_types_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."meal_types_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."meal_types_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."recipes" TO "anon";
GRANT ALL ON TABLE "public"."recipes" TO "authenticated";
GRANT ALL ON TABLE "public"."recipes" TO "service_role";



GRANT ALL ON SEQUENCE "public"."recipes_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."recipes_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."recipes_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."recipes_meal_types" TO "anon";
GRANT ALL ON TABLE "public"."recipes_meal_types" TO "authenticated";
GRANT ALL ON TABLE "public"."recipes_meal_types" TO "service_role";



GRANT ALL ON SEQUENCE "public"."recipes_meal_types_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."recipes_meal_types_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."recipes_meal_types_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."users" TO "anon";
GRANT ALL ON TABLE "public"."users" TO "authenticated";
GRANT ALL ON TABLE "public"."users" TO "service_role";



GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "service_role";































RESET ALL;

